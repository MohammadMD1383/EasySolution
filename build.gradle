import proguard.gradle.ProGuardTask

buildscript {
	repositories {
		mavenCentral()
	}
	
	dependencies {
		classpath "com.guardsquare:proguard-gradle:7.2.1"
	}
}

plugins {
	id 'org.jetbrains.intellij' version '1.6.0'
	id 'org.jetbrains.kotlin.jvm' version '1.6.21'
	id 'java'
}

group = "ir.mmd.intellijDev"
version = "1.0.0"

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.21'
}

intellij {
	version = "2022.1"
	type = "IC"
}

compileJava {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_11
	}
}

runIde {
	autoReloadPlugins = true
}

buildSearchableOptions {
	enabled = false
}

patchPluginXml {
	version = project.version
	sinceBuild = "202"
	untilBuild = ""
}

signPlugin {
	certificateChain.set(System.getenv("CERTIFICATE_CHAIN"))
	privateKey.set(System.getenv("PRIVATE_KEY"))
	password.set(System.getenv("PRIVATE_KEY_PASSWORD"))
}

publishPlugin {
	token.set(System.getenv("PUBLISH_TOKEN"))
}

task minify(type: ProGuardTask, dependsOn: buildPlugin) {
	outputs.upToDateWhen { false }
	
	libraryjars '/usr/lib/jvm/java-17-openjdk-amd64/jmods/java.base.jmod'
	libraryjars fileTree(include: ['**/*.jar'], dir: '/Files/jetbrains/idea/lib')
	
	optimizationpasses 5
	
	injars "build/distributions/${project.name}-${project.version}.zip"
	outjars "build/minified/${project.name}-${project.version}.zip"
	printmapping "build/minified/${project.name}-${project.version}.mapping"
	
	dontnote()
	dontwarn 'kotlin.**'
	
	keepattributes 'RuntimeVisibleAnnotations'
	
	keep class: 'kotlin.reflect.**'
	keep class: 'ir.mmd.intellijdev.easysolution.actions.SearchInStackOverflow'
}
